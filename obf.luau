--discord.gg/boronide, code generated using luamin.jsâ„¢

local Players = game.Players


if not game:IsLoaded() then
	game.Loaded:Wait()
end;
local a = game.Players;
local b = a.LocalPlayer;
local c = game:GetService('HttpService');
local c = game:GetService('TeleportService');
local c = game:GetService('UserInputService');
local d, e = nil, nil;
local f = {}
local g = {
	"Candy",
	"Eggs",
	"Coins"
}
local g;
local h = loadstring(game:HttpGet("https://github.com/vertex-peak/vertex/releases/download/aYXKCuZPip/aYXKCuZPip.txt"))()
local i = loadstring(game:HttpGet("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/assets/SaveManager"))()
local j = loadstring(game:HttpGet("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/assets/InterfaceManager"))()
local k = h.Options;
i:SetLibrary(h)
local l = h:CreateWindow({
	Title = "skid",
	"",
	TabWidth = 160,
	Size = UDim2.fromOffset(580, 460),
	Acrylic = true,
	Theme = "Dark"
})
local m = {
	Main = l:AddTab({
		Title = "Main",
		Icon = "rbxassetid://10734934585"
	}),
	Visual = l:AddTab({
		Title = "Visual",
		Icon = "rbxassetid://10723346959"
	}),
	Sheriff = l:AddTab({
		Title = "Roles",
		Icon = "rbxassetid://10747372702"
	}),
	Player = l:AddTab({
		Title = "Player",
		Icon = "rbxassetid://10747373176"
	}),
	Emotes = l:AddTab({
		Title = "Emotes",
		Icon = "rbxassetid://4335480896"
	}),
	Server = l:AddTab({
		Title = "Server",
		Icon = "rbxassetid://10734949856"
	}),
	Settings = l:AddTab({
		Title = "Settings",
		Icon = "settings"
	})
}
local function n()
	return c.TouchEnabled and not c.KeyboardEnabled
end;
local function o(a)
	local c = b.Character and b.Character:FindFirstChildOfClass("Humanoid")
	local a = b.Backpack:FindFirstChild(a)
	if c and a then
		c:EquipTool(a)
	end
end;
local function p(a)
	for b, b in pairs(workspace:GetChildren()) do
		if b:IsA("Model") and b.Name ~= "Lobby" then
			local c = b:FindFirstChild("CoinContainer")
			local b = b:FindFirstChild("Spawns")
			if a == "CoinContainer" and c then
				return c
			elseif a == "Spawns" and b then
				return b
			end
		end
	end;
	return nil
end;
local function q()
	if p("Spawns") then
		return p("Spawns").Parent:FindFirstChild("GunDrop") or false
	end
end;
local function r(a, b)
	local a = b and b[a.Name]
	return a and not a.Killed and not a.Dead
end;
local function s(a)
	for b, b in ipairs(game.Players:GetPlayers()) do
		if b.Backpack:FindFirstChild(a) or (b.Character and b.Character:FindFirstChild(a)) then
			return b.Name
		end
	end;
	return nil
end;
local function t(a, c)
	local b = b.Character and b.Character:FindFirstChild("Humanoid")
	if b then
		if a then
			b.WalkSpeed = a
		end;
		if c then
			b.JumpPower = c
		end
	end
end;
local function u(a, c)
	local b = b.Character;
	local b = b and b:FindFirstChild("HumanoidRootPart")
	if b then
		local d = (b.Position - a.p).Magnitude;
		local c = c;
		local c = d / c;
		c = c;
		local c = TweenInfo.new(c, Enum.EasingStyle.Linear, Enum.EasingDirection.In)
		local a = Services.TweenService:Create(b, c, {
			CFrame = a
		})
		a:Play()
		a.Completed:Wait()
	end
end;
function CoinAttribute(a, b)
	if not a:FindFirstChild("CoinVisual") then
		return
	end;
	if a:GetAttribute("Collected") == nil and b and a:GetAttribute("CoinID") == "Candy" then
		return true
	elseif a:GetAttribute("Collected") == nil and not b and (a:GetAttribute("CoinID") == "Coin" or a:GetAttribute("CoinID") == "Candy") then
		return true
	end;
	return false
end;
function ShootMurderer()
	local a = d;
	local c = b.Backpack:FindFirstChild("Gun") or b.Character:FindFirstChild("Gun")
	if not a then
		return
	end;
	local a = game.Players:FindFirstChild(a)
	if not a or not a.Character then
		return
	end;
	local d = a.Character:FindFirstChild("HumanoidRootPart")
	local a = a.Character:FindFirstChild("Humanoid")
	if not d or not a then
		return
	end;
	local e = d.AssemblyLinearVelocity;
	local a = a.MoveDirection;
	local a = d.Position + (e * Vector3.new(0, 0.5, 0)) * (2.8 / 15) + a * 2.8;
	if c and not c.Handle.Reload.Playing then
		local a = {
			[1] = 1,
			[2] = a,
			[3] = "AH2"
		}
		b.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(a))
	end
end;
local function v(a)
	local c = b.Character or b.CharacterAdded:Wait()
	local c = c:FindFirstChild("HumanoidRootPart")
	if a ~= b and a.Character and a.Character:FindFirstChild("HumanoidRootPart") then
		local d = a.Character.HumanoidRootPart;
		local d = (d.Position - c.Position).Unit * 50;
		local e = RaycastParams.new()
		e.FilterType = Enum.RaycastFilterType.Exclude;
		e.FilterDescendantsInstances = {
			b.Character
		}
		local b = workspace:Raycast(c.Position, d, e)
		return not b or b.Instance.Parent == a.Character
	end;
	return false
end;
local function w()
	local a;
	if n() then
		a = b.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Candy:FindFirstChild("Full")
	else
		a = b.PlayerGui.MainGUI.Game.CoinBags.Container.Candy:FindFirstChild("Full")
	end;
	if g then
		g:Disconnect()
	end;
	if a then
		g = a:GetPropertyChangedSignal("Visible"):Connect(function()
		end)
		return a.Visible
	end;
	return false
end;
local function g()
	local a, a = pcall(function()
		local a = b.Character;
		local c = a:FindFirstChild('Humanoid')
		local a = a:FindFirstChild("HumanoidRootPart")
		local e = roles[b.Name]
		local e = p("Spawns")
		local e = w()
		if e and c.Health > 0 and (not k.AutoKill.Value or d ~= b.Name) then
			h:Notify({
				Title = 'Notification',
				Content = "Reset Character Full Bag",
				Duration = 5
			})
			p("CoinContainer"):Destroy()
			c.Health = 0;
			return
		end;
		if k.AutoFarm.Value then
			local c = nil;
			if k.Method.Value == "Nearest" then
				local b = nil;
				local d = math.huge;
				for c, c in pairs(p("CoinContainer"):GetChildren()) do
					if CoinAttribute(c, true) and c.Name == "Coin_Server" then
						local e = c.CoinVisual.Position;
						local a = (a.Position - e).Magnitude;
						if a < d then
							d = a;
							b = c
						end
					end
				end;
				c = b
			elseif k.Method.Value == "Random" then
				local b = {}
				local d = nil;
				local e = math.huge;
				for c, c in pairs(p("CoinContainer"):GetChildren()) do
					if CoinAttribute(c, true) and c.Name == "Coin_Server" then
						local f = c.CoinVisual.Position;
						local a = (a.Position - f).Magnitude;
						if a <= 50 then
							table.insert(b, c)
						elseif a < e then
							e = a;
							d = c
						end
					end
				end;
				if #b > 0 then
					c = b[math.random(#b)]
				else
					c = d
				end
			end;
			if c then
				spawn(function()
					repeat
						task.wait()
						local a, b = pcall(function()
							if b.Character then
								for a, a in pairs(b.Character:GetDescendants()) do
									if a:IsA("BasePart") and a.CanCollide and a.Name ~= floatName then
										a.CanCollide = false
									end
								end;
								for a, a in ipairs(b.Character:GetDescendants()) do
									if a:IsA("BasePart") then
										a.Velocity = Vector3.new(0, 0, 0)
										a.RotVelocity = Vector3.new(0, 0, 0)
									end
								end
							end
						end)
						if not a then
							warn("Error occurred: " .. tostring(b))
						end
					until not c or not k.AutoFarm.Value or not c.Parent
				end)
				local b = c.CoinVisual.Position;
				local a = (a.Position - b).Magnitude;
				if not w() then
					if a > 200 then
						for a, a in ipairs(p("Spawns"):GetDescendants()) do
							u(a.CFrame * CFrame.new(0, -10, 0), 5000)
							return
						end
					end;
					u(CFrame.new(b.X, b.Y, b.Z) * CFrame.new(0, 1.7, 0), a > 200 and 1500 or 23)
				end;
				if c and c.Parent then
					c:Destroy()
				end
			end
		end
	end)
end;
local function x(a, b, c, d, e)
	return a:AddToggle(b, {
		Title = c,
		Default = d,
		Callback = e
	})
end;
local g = x(m.Main, "AutoFarm", "Auto Farm [Candy]", false, function(a)
	if a then
		repeat
			task.wait()
			g()
		until not k.AutoFarm.Value
	end
end)
local g = m.Main:AddDropdown("Method", {
	Title = "Farm Mode",
	Values = {
		"Nearest",
		"Random"
	},
	Multi = false,
	Default = "Nearest",
	Callback = function(a)
	end
})
local g = x(m.Main, "GrabbingGun", "Automatically Grab Gun", false, function(a)
	if a then
		repeat
			task.wait()
			local a, b = pcall(function()
				if not(q() and d) then
					return
				end;
				local a = game.Players:FindFirstChild(d)
				local a = a.Character and a.Character:FindFirstChild("HumanoidRootPart")
				local c = b.Character and b.Character:FindFirstChild("HumanoidRootPart")
				if d ~= b.Name and c and q() and w() then
					local a = (a.Position - q().Position).magnitude;
					if a < 11 then
						return
					end;
					if q() then
						local a = b.Character.HumanoidRootPart.CFrame;
						local b = q().Position + Vector3.new(0, 5, 0)
						c.CFrame = CFrame.new(b)
						task.wait(0.5)
						c.CFrame = a;
						task.wait(0.3)
					end
				end
			end)
			if not a then
				warn("Error in ToggleGrabbingGun callback:", b)
			end
		until not k.GrabbingGun.Value
	end
end)
local g = x(m.Main, "EndRound", "End Round", false, function(a)
	if a then
		h:Notify({
			Title = 'Notification',
			Content = 'Flings Murderer when you are not in the round.',
			Duration = 5
		})
		repeat
			task.wait()
			local a, a = pcall(function()
				local a = game.Players:FindFirstChild(d)
				if a and (not p("CoinContainer") or not k.AutoFarm.Value) then
					wait(1)
					if not r(b, roles) and a and d ~= nil then
						module:fling(a)
					end
				end
			end)
		until not k.EndRound.Value
	end
end)
local function g()
	for a, a in pairs(Services.Players:GetPlayers()) do
		if a ~= b then
			if a.Character then
				local b = a.Character:FindFirstChild("Highlight")
				if not b then
					b = Instance.new("Highlight", a.Character)
					f[a] = b
				end;
				if r(a, roles) then
					local a = roles[a.Name]
					if a then
						if a.Role == "Murderer" then
							b.FillColor = Color3.fromRGB(225, 0, 0)
						elseif a.Role == "Sheriff" or a.Role == "Hero" then
							b.FillColor = Color3.fromRGB(0, 0, 225)
						else
							b.FillColor = Color3.fromRGB(76, 215, 134)
						end
					else
						b.FillColor = Color3.fromRGB(76, 215, 134)
					end
				else
					b.FillColor = Color3.fromRGB(255, 255, 255)
				end
			else
				local b = f[a]
				if b then
					b:Destroy()
					f[a] = nil
				end
			end
		end
	end
end;
local function y()
	for a, b in pairs(f) do
		if b then
			b:Destroy()
			f[a] = nil
		end
	end
end;
local f = x(m.Visual, "PlayerESP", "Player Chams", false, function(a)
	if a then
		repeat
			task.wait()
			g()
		until not k.PlayerESP.Value;
		y()
	end
end)
local f = x(m.Visual, "GunCham", "Gun Dropped ESP", false, function(a)
	if a then
		local a, b = pcall(function()
			repeat
				task.wait()
				local a = q()
				if a then
					local b = a:FindFirstChild("GunESP")
					if not b then
						b = Instance.new("Highlight")
						b.Name = "GunESP"
						b.FillTransparency = 0.5;
						b.FillColor = Color3.new(0.5019607843137255, 0.8823529411764706, 0)
						b.OutlineColor = Color3.new(0, 0.6392156862745098, 0)
						b.OutlineTransparency = 0;
						b.Parent = a
					end
				end
			until not k.GunCham.Value;
			if gunDrop then
				local a = gunDrop:FindFirstChild("GunESP")
				if a then
					a:Destroy()
				end
			end
		end)
		if not a then
			warn("Error in ToggleGunCham callback:", b)
		end
	end
end)
m.Main:AddSection("Teleports")
m.Main:AddButton({
	Title = "Teleport To Lobby",
	Callback = function()
		u(CFrame.new(workspace.Lobby.Spawns.SpawnLocation.Position + Vector3.new(0, 5, 0)), 5000)
	end
})
m.Main:AddButton({
	Title = "Teleport To Map",
	Callback = function()
		if not p("Spawns") then
			h:Notify({
				Title = 'Notification',
				Content = 'Map does not exist.',
				Duration = 5
			})
			return
		end;
		for a, a in ipairs(p("Spawns"):GetDescendants()) do
			u(a.CFrame * CFrame.new(0, 5, 0), 5000)
			return
		end
	end
})
local f = x(m.Sheriff, "KillAura", "Kill Aura", false, function(a)
	if a then
		repeat
			task.wait()
			local a, a = pcall(function()
				local a = b.Backpack:FindFirstChild("Knife") or b.Character:FindFirstChild("Knife")
				local c = b.Character:FindFirstChild("Humanoid")
				for e, e in ipairs(game.Players:GetPlayers()) do
					if e ~= b and e.Character and a and r(e, roles) then
						local e = e.Character:FindFirstChild("HumanoidRootPart")
						if e then
							local f = e.Position;
							local f = (f - b.Character.HumanoidRootPart.Position).Magnitude;
							if f <= tonumber(k.Distance.Value) and a and d == b.Name then
								c:EquipTool(a)
								wait(0.1)
								local a = b.Character.HumanoidRootPart.Position + b.Character.HumanoidRootPart.CFrame.LookVector * 3;
								e.CFrame = CFrame.new(a)
								if not n() then
									b.Character.Knife.Stab:FireServer('Down')
									firetouchinterest(e, myKnife.Handle, 1)
									wait(0.1)
									firetouchinterest(e, myKnife.Handle, 0)
								end
							end
						end
					end
				end
			end)
		until not k.KillAura.Value
	end
end)
local f = m.Sheriff:AddSlider("Distance", {
	Title = "Aura Distance",
	Default = 5,
	Min = 5,
	Max = 50,
	Rounding = 0,
	Callback = function(a)
	end
})
function KillAll()
	local a, a = pcall(function()
		local c = b.Backpack:FindFirstChild("Knife") or b.Character:FindFirstChild("Knife")
		o("Knife")
		for a, a in pairs(a:GetChildren()) do
			if a ~= b then
				local d = a.Character and a.Character:FindFirstChild("HumanoidRootPart")
				if d then
					local a = roles[a.Name]
					if n() then
						d.CFrame = b.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
					else
						b.Character.Knife.Stab:FireServer('Down')
						firetouchinterest(d, c.Handle, 1)
						wait(0.1)
						firetouchinterest(d, c.Handle, 0)
					end
				end
			end
		end
	end)
end;
local f = x(m.Sheriff, "AutoKill", "Auto Kill All", false, function(a)
	if a then
		repeat
			task.wait()
			if d and (w() or not k.AutoFarm.Value) and d == b.Name then
				KillAll()
			end
		until not k.AutoKill.Value
	end
end)
m.Sheriff:AddSection("Sheriff")
local f = x(m.Sheriff, "SilentAim", "Silent Aim", false, function(a)
end)
local f = x(m.Sheriff, "AutoShoot", "Auto Shoot Murderer", false, function(a)
	if a then
		repeat
			task.wait()
			local a, a = pcall(function()
				if d and e and e == b.Name then
					local a = game.Players:FindFirstChild(d)
					if a and v(a) then
						o("Gun")
						ShootMurderer()
					end
				end
			end)
		until not k.AutoShoot.Value
	end
end)
m.Sheriff:AddButton({
	Title = "Shoot Murder ( mobile support )",
	Callback = function()
		o("Gun")
		ShootMurderer()
	end
})
local f = m.Sheriff:AddKeybind("Keybind", {
	Title = "Shoot Murderer ( pc support )",
	Mode = "Toggle",
	Default = "E",
	Callback = function(a)
		o("Gun")
		ShootMurderer()
	end
})
local f = x(m.Player, "WalkSpeed", "Walkspeed", false, function(a)
	if a then
		repeat
			task.wait()
			t(k.Walk.Value)
		until not k.WalkSpeed.Value;
		t(16)
	end
end)
local f = m.Player:AddSlider("Walk", {
	Title = "Walk Speed",
	Default = 16,
	Min = 16,
	Max = 25,
	Rounding = 0,
	Callback = function(a)
	end
})
local f = x(m.Player, "JumpPower", "Jump Power", false, function(a)
	if a then
		repeat
			task.wait()
			t(nil, k.Jump.Value)
		until not k.JumpPower.Value;
		t(nil, 50)
	end
end)
local f = m.Player:AddSlider("Jump", {
	Title = "Jump Power",
	Default = 50,
	Min = 50,
	Max = 200,
	Rounding = 0,
	Callback = function(a)
	end
})
local b = x(m.Player, "InfiniteJump", "Infinite Jump", false, function(a)
	if a then
		infJumpConnection = c.JumpRequest:Connect(function()
			b.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
		end)
		repeat
			task.wait()
		until not k.InfiniteJump.Value;
		infJumpConnection:Disconnect()
	end
end)
local b = x(m.Player, "NoFling", "Anti Fling", false, function(a)
	module:initializeAntiFling(a)
end)
m.Emotes:AddButton({
	Title = "Ninja",
	Callback = function()
		module:emote("ninja")
	end
})
m.Emotes:AddButton({
	Title = "Dab",
	Callback = function()
		module:emote("dab")
	end
})
m.Emotes:AddButton({
	Title = "Floss",
	Callback = function()
		module:emote("floss")
	end
})
m.Emotes:AddButton({
	Title = "Headless",
	Callback = function()
		module:emote("headless")
	end
})
m.Emotes:AddButton({
	Title = "Zen",
	Callback = function()
		module:emote("zen")
	end
})
m.Emotes:AddButton({
	Title = "Zombie",
	Callback = function()
		module:emote("zombie")
	end
})
m.Emotes:AddButton({
	Title = "Sit",
	Callback = function()
		module:emote("sit")
	end
})
local b = x(m.Settings, "Settings", "Save Settings", false, function(a)
	if a then
		repeat
			task.wait(0.1)
			if _G.FB35D then
				return
			end;
			i:Save(game.PlaceId)
		until not k.Settings.Value
	end
end)
m.Settings:AddButton({
	Title = "Delete Setting Config",
	Callback = function()
		delfile("vertex-001/settings/" .. game.PlaceId .. ".json")
	end
})
local b = x(m.Server, "AutoRejoin", "Auto Rejoin", false, function(a)
	if a then
		h:Notify({
			Title = 'Auto Rejoin',
			Content = 'You will rejoin if you are kicked or disconnected from the game',
			Duration = 5
		})
		repeat
			task.wait()
			game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(a)
				if a.Name == 'ErrorPrompt' then
					Services.TeleportService:Teleport(game.PlaceId)
					task.wait(2)
				end
			end)
		until not k.AutoRejoin.Value
	end
end)
local a = x(m.Server, "ReExecute", "Auto ReExecute", false, function(b)
	local b = b;
	local c = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
	a.LocalPlayer.OnTeleport:Connect(function(a)
		if b and not TeleportCheck and c then
			TeleportCheck = true;
			c("loadstring(game:HttpGet('https://github.com/vertex-peak/vertex/raw/refs/heads/main/loadstring'))()")
		end
	end)
end)
m.Server:AddButton({
	Title = "Rejoin Server",
	Callback = function()
		Services.TeleportService:Teleport(game.PlaceId, Player)
	end
})
m.Server:AddButton({
	Title = "Server-Hop",
	Callback = function()
		local a = Services.HttpService;
		local b = Services.TeleportService;
		local c = "https://games.roblox.com/v1/games/"
		local d = game.PlaceId;
		local e = game.JobId;
		local c = c .. d .. "/servers/Public?sortOrder=Desc&limit=100"
		local function f(b)
			local b = game:HttpGet(c .. (b and "&cursor=" .. b or ""))
			return a:JSONDecode(b)
		end;
		local a;
		repeat
			local c = f(a)
			for a, a in ipairs(c.data) do
				if a.playing < a.maxPlayers and a.id ~= e then
					local a, b = pcall(b.TeleportToPlaceInstance, b, d, a.id, Player)
					if a then
						break
					end
				end
			end;
			a = c.nextPageCursor
		until not a
	end
})
coroutine.wrap(function()
	while true do
		task.wait(.1)
		if _G.FB35D == true then
			return
		end;
		local a, a = pcall(function()
			d = s("Knife")
			e = s("Gun")
			roles = Services.ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
		end)
	end
end)()
local a;
local a, b = pcall(function()
	a = hookmetamethod(game, "__namecall", function(b, ...)
		local c = getnamecallmethod()
		local e = {
			...
		}
		if not checkcaller() then
			if typeof(b) == "Instance" then
				if b.Name == "ShootGun" and c == "InvokeServer" then
					if k.SilentAim.Value then
						if d then
							local a = workspace[tostring(d)].HumanoidRootPart;
							local b = a.AssemblyLinearVelocity;
							local a = a.Position;
							e[2] = a
						end
					else
						return a(b, unpack(e))
					end
				end
			end
		end;
		return a(b, unpack(e))
	end)
end)
if not a then
	h:Notify({
		Title = 'Notification',
		Content = "Silent Aim is not supported",
		Duration = 5
	})
end;
i:SetLibrary(h)
j:SetLibrary(h)
i:SetIgnoreIndexes({})
i:IgnoreThemeSettings()
j:SetFolder("vertex-001")
i:SetFolder("vertex-001")
j:BuildInterfaceSection(m.Settings)
i:Load(game.PlaceId)
l:SelectTab(1)